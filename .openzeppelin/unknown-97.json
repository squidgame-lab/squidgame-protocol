{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xF96091aD05423d3C1fE042289f41295F8F78956E",
    "txHash": "0x6032d60b263c532293eed93e9ce79fea6df217fb0b150b0611a970c5408fa8c7",
    "deployTransaction": {
      "hash": "0x6032d60b263c532293eed93e9ce79fea6df217fb0b150b0611a970c5408fa8c7",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xde51312CdF679e042B41dC8dd5F00984d0f5bbE2",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x02540be400"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x075da0"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 74,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xf6117102c9accd6946cf09e1d5ba1863c7fc591f039bb56b5d0119b89aec524d",
      "s": "0x185fc86ee9551842d6a89e3676b0c87ed3a28250db668ed0cde58afdf3c1d363",
      "v": 229,
      "creates": "0xF96091aD05423d3C1fE042289f41295F8F78956E",
      "chainId": 97
    }
  },
  "proxies": [
    {
      "address": "0xBBb138e067b0E96492b67eb1777F7A06AaEFA0a2",
      "txHash": "0x2d02bab7d02b0383da2aa25640d6aa0eeb0e39d6a11f3e61ae5d0a1898295fc9",
      "kind": "transparent"
    },
    {
      "address": "0xa2d23636b97e020a53B0Cf19970d8c5c7e738B5b",
      "txHash": "0x71269f2647b4093e5a0a8f86bbf077a5055d73c7fb3528607c0d903521cf0ac5",
      "kind": "transparent"
    },
    {
      "address": "0x37694C0e1F6512136116BE982e9FF45670097C5D",
      "txHash": "0xe0d3314138249f905318bd41dca9b36c4bc3f9a1466cae85e71737cb5a330d9e",
      "kind": "transparent"
    },
    {
      "address": "0x8Ac5cB0A37DB3E701321833D877850b4390F7698",
      "txHash": "0x5699fdbd7409db17ca03de33c2ce4a4febbef5a19bf6fc38cbb7c27bbd06d963",
      "kind": "transparent"
    },
    {
      "address": "0x123D4Ae77299DB1CBD792E7af380BA9FE3A008fA",
      "txHash": "0xb867495c1d520378c36f66ab9a4dd9311bb56b08e98867e5508062a95c584776",
      "kind": "transparent"
    },
    {
      "address": "0xae0dfBB0368eB412671e249C034d4B32b6bfaB77",
      "txHash": "0x05683a16418e303308c91e7ccf1fe9770deb26e820ce4b288d58a87593f24382",
      "kind": "transparent"
    },
    {
      "address": "0x2a3199F9A786683CFa7fc8924991822e76Ba6DA2",
      "txHash": "0x7009bdbc7acbbb98ed754ee23d6c30c9a87146c512494346320844277442a740",
      "kind": "transparent"
    }
  ],
  "impls": {
    "d8c37cba2d0c6d89912b29195fcab0dc86b7dcc01179a901988b5e294e57f178": {
      "address": "0x7aD9b6E0e9d159073964f68ac84BEB533F6E5Ae2",
      "txHash": "0x81d1818a7a3edb83b3e3afda5e530bc677759e25e31ecf8025956bdd6e452cd3",
      "layout": {
        "storage": [
          {
            "contract": "ERC20Token",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/modules/ERC20Token.sol:9"
          },
          {
            "contract": "ERC20Token",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/modules/ERC20Token.sol:10"
          },
          {
            "contract": "ERC20Token",
            "label": "decimals",
            "type": "t_uint8",
            "src": "contracts/modules/ERC20Token.sol:11"
          },
          {
            "contract": "ERC20Token",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts/modules/ERC20Token.sol:12"
          },
          {
            "contract": "ERC20Token",
            "label": "balanceOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/modules/ERC20Token.sol:13"
          },
          {
            "contract": "ERC20Token",
            "label": "allowance",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/modules/ERC20Token.sol:14"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "contracts/modules/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "contracts/modules/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/modules/Initializable.sol:63"
          },
          {
            "contract": "TestToken",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/TestToken.sol:9"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          }
        }
      }
    },
    "562fcbeabae6c5985deb23a5b130df660161660a0ad5b9f3dc8b02581b01458d": {
      "address": "0x9147CC3a2e606BEA1526dd799eB2924B98146E6F",
      "txHash": "0x049353987166365ea23a29bff963712e5d863cf9d18f0cc6c35da40d1ec42d77",
      "layout": {
        "storage": [
          {
            "contract": "ERC20Token",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/modules/ERC20Token.sol:9"
          },
          {
            "contract": "ERC20Token",
            "label": "symbol",
            "type": "t_string_storage",
            "src": "contracts/modules/ERC20Token.sol:10"
          },
          {
            "contract": "ERC20Token",
            "label": "decimals",
            "type": "t_uint8",
            "src": "contracts/modules/ERC20Token.sol:11"
          },
          {
            "contract": "ERC20Token",
            "label": "totalSupply",
            "type": "t_uint256",
            "src": "contracts/modules/ERC20Token.sol:12"
          },
          {
            "contract": "ERC20Token",
            "label": "balanceOf",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/modules/ERC20Token.sol:13"
          },
          {
            "contract": "ERC20Token",
            "label": "allowance",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/modules/ERC20Token.sol:14"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "contracts/modules/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "contracts/modules/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/modules/Initializable.sol:63"
          },
          {
            "contract": "GameToken",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/GameToken.sol:9"
          },
          {
            "contract": "GameToken",
            "label": "admin",
            "type": "t_address",
            "src": "contracts/GameToken.sol:10"
          },
          {
            "contract": "GameToken",
            "label": "team",
            "type": "t_address",
            "src": "contracts/GameToken.sol:11"
          },
          {
            "contract": "GameToken",
            "label": "teamRate",
            "type": "t_uint256",
            "src": "contracts/GameToken.sol:12"
          },
          {
            "contract": "GameToken",
            "label": "funds",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/GameToken.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          }
        }
      }
    },
    "a7727594a3e0ff9dd0d1d0bd9b00521b0a1b14104a3762dfb92e431a67ec19fb": {
      "address": "0x5b9777Fdf9700245eBcB1d50B26B93738D1993BC",
      "txHash": "0x910e883438ae129053aa9493588f867cbc1ecb62e16adc825b4ad899cbdcdeea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "contracts/modules/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "contracts/modules/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/modules/Initializable.sol:63"
          },
          {
            "contract": "GameConfig",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/GameConfig.sol:7"
          },
          {
            "contract": "GameConfig",
            "label": "dev",
            "type": "t_address",
            "src": "contracts/GameConfig.sol:8"
          },
          {
            "contract": "GameConfig",
            "label": "admin",
            "type": "t_address",
            "src": "contracts/GameConfig.sol:9"
          },
          {
            "contract": "GameConfig",
            "label": "team",
            "type": "t_address",
            "src": "contracts/GameConfig.sol:10"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "1df8c475ecba95036bc912091edb0d5fb164bd563bed14f9ae0d2f52dcf2dd0e": {
      "address": "0x33a35f9c7D178B4Dd8b322C20D635DF361A43434",
      "txHash": "0x1c52dde9ea51d539b9d828986cdc9ab4b28134655289390db10d4d2bbb7fe8d3",
      "layout": {
        "storage": [
          {
            "contract": "Configable",
            "label": "config",
            "type": "t_address",
            "src": "contracts/modules/Configable.sol:11"
          },
          {
            "contract": "Configable",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/modules/Configable.sol:12"
          },
          {
            "contract": "Pausable",
            "label": "_paused",
            "type": "t_bool",
            "src": "contracts/modules/Pausable.sol:24"
          },
          {
            "contract": "ReentrancyGuard",
            "label": "_status",
            "type": "t_uint256",
            "src": "contracts/modules/ReentrancyGuard.sol:36"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "contracts/modules/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "contracts/modules/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/modules/Initializable.sol:63"
          },
          {
            "contract": "GameTicket",
            "label": "buyToken",
            "type": "t_address",
            "src": "contracts/GameTicket.sol:17"
          },
          {
            "contract": "GameTicket",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/GameTicket.sol:18"
          },
          {
            "contract": "GameTicket",
            "label": "feeRate",
            "type": "t_uint256",
            "src": "contracts/GameTicket.sol:19"
          },
          {
            "contract": "GameTicket",
            "label": "unit",
            "type": "t_uint256",
            "src": "contracts/GameTicket.sol:20"
          },
          {
            "contract": "GameTicket",
            "label": "total",
            "type": "t_uint256",
            "src": "contracts/GameTicket.sol:21"
          },
          {
            "contract": "GameTicket",
            "label": "tickets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/GameTicket.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4f2b4f2964beb2db99b2aa3e3a63867ddc7a493b1744337b011c335b6937d94a": {
      "address": "0x3130C43af32338AC30B838761e4Dd11705973911",
      "txHash": "0x322cb5bbe24371a0a502e089aae7930edc3b703b92102e2d4a65cb30889823fb",
      "layout": {
        "storage": [
          {
            "contract": "Configable",
            "label": "config",
            "type": "t_address",
            "src": "contracts/modules/Configable.sol:11"
          },
          {
            "contract": "Configable",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/modules/Configable.sol:12"
          },
          {
            "contract": "Pausable",
            "label": "_paused",
            "type": "t_bool",
            "src": "contracts/modules/Pausable.sol:24"
          },
          {
            "contract": "ReentrancyGuard",
            "label": "_status",
            "type": "t_uint256",
            "src": "contracts/modules/ReentrancyGuard.sol:36"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "contracts/modules/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "contracts/modules/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/modules/Initializable.sol:63"
          },
          {
            "contract": "GamePool",
            "label": "rewardSource",
            "type": "t_address",
            "src": "contracts/GamePool.sol:17"
          },
          {
            "contract": "GamePool",
            "label": "buyToken",
            "type": "t_address",
            "src": "contracts/GamePool.sol:18"
          },
          {
            "contract": "GamePool",
            "label": "shareToken",
            "type": "t_address",
            "src": "contracts/GamePool.sol:19"
          },
          {
            "contract": "GamePool",
            "label": "nextPool",
            "type": "t_address",
            "src": "contracts/GamePool.sol:20"
          },
          {
            "contract": "GamePool",
            "label": "nextPoolRate",
            "type": "t_uint256",
            "src": "contracts/GamePool.sol:21"
          },
          {
            "contract": "GamePool",
            "label": "epoch",
            "type": "t_uint256",
            "src": "contracts/GamePool.sol:22"
          },
          {
            "contract": "GamePool",
            "label": "totalRound",
            "type": "t_uint256",
            "src": "contracts/GamePool.sol:23"
          },
          {
            "contract": "GamePool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/GamePool.sol:24"
          },
          {
            "contract": "GamePool",
            "label": "tickets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/GamePool.sol:25"
          },
          {
            "contract": "GamePool",
            "label": "isCheckTicket",
            "type": "t_bool",
            "src": "contracts/GamePool.sol:26"
          },
          {
            "contract": "GamePool",
            "label": "orders",
            "type": "t_array(t_struct(Order)316_storage)dyn_storage",
            "src": "contracts/GamePool.sol:60"
          },
          {
            "contract": "GamePool",
            "label": "historys",
            "type": "t_mapping(t_uint256,t_struct(RoundData)305_storage)",
            "src": "contracts/GamePool.sol:62"
          },
          {
            "contract": "GamePool",
            "label": "userOrders",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/GamePool.sol:63"
          },
          {
            "contract": "GamePool",
            "label": "roundOrders",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/GamePool.sol:64"
          },
          {
            "contract": "GamePool",
            "label": "userRoundOrderMap",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/GamePool.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(Order)316_storage)dyn_storage": {
            "label": "struct GamePool.Order[]"
          },
          "t_struct(Order)316_storage": {
            "label": "struct GamePool.Order",
            "members": [
              {
                "label": "roundNumber",
                "type": "t_uint256"
              },
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "ticketAmount",
                "type": "t_uint256"
              },
              {
                "label": "winAmount",
                "type": "t_uint256"
              },
              {
                "label": "claimed",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(RoundData)305_storage)": {
            "label": "mapping(uint256 => struct GamePool.RoundData)"
          },
          "t_struct(RoundData)305_storage": {
            "label": "struct GamePool.RoundData",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "ticketTotal",
                "type": "t_uint256"
              },
              {
                "label": "winTotal",
                "type": "t_uint256"
              },
              {
                "label": "rewardTotal",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "32f450d08fc29a769ce1318aa697d71291d0d3e8816e93415f38b17c20f707bc": {
      "address": "0x9b3d834Ba692Fc061Af6F9D4D903aD6e8bB135B6",
      "txHash": "0x12bea9cf5da02aba61dfaa421972482881d06620a7495c3dc7cf02c0bdfbb75d",
      "layout": {
        "storage": [
          {
            "contract": "Configable",
            "label": "config",
            "type": "t_address",
            "src": "contracts/modules/Configable.sol:11"
          },
          {
            "contract": "Configable",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/modules/Configable.sol:12"
          },
          {
            "contract": "Pausable",
            "label": "_paused",
            "type": "t_bool",
            "src": "contracts/modules/Pausable.sol:24"
          },
          {
            "contract": "ReentrancyGuard",
            "label": "_status",
            "type": "t_uint256",
            "src": "contracts/modules/ReentrancyGuard.sol:36"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "contracts/modules/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "contracts/modules/Initializable.sol:28"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/modules/Initializable.sol:63"
          },
          {
            "contract": "GamePool",
            "label": "rewardSource",
            "type": "t_address",
            "src": "contracts/GamePool.sol:17"
          },
          {
            "contract": "GamePool",
            "label": "buyToken",
            "type": "t_address",
            "src": "contracts/GamePool.sol:18"
          },
          {
            "contract": "GamePool",
            "label": "shareToken",
            "type": "t_address",
            "src": "contracts/GamePool.sol:19"
          },
          {
            "contract": "GamePool",
            "label": "nextPool",
            "type": "t_address",
            "src": "contracts/GamePool.sol:20"
          },
          {
            "contract": "GamePool",
            "label": "nextPoolRate",
            "type": "t_uint256",
            "src": "contracts/GamePool.sol:21"
          },
          {
            "contract": "GamePool",
            "label": "epoch",
            "type": "t_uint256",
            "src": "contracts/GamePool.sol:22"
          },
          {
            "contract": "GamePool",
            "label": "totalRound",
            "type": "t_uint256",
            "src": "contracts/GamePool.sol:23"
          },
          {
            "contract": "GamePool",
            "label": "rewardRate",
            "type": "t_uint256",
            "src": "contracts/GamePool.sol:24"
          },
          {
            "contract": "GamePool",
            "label": "tickets",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/GamePool.sol:25"
          },
          {
            "contract": "GamePool",
            "label": "isCheckTicket",
            "type": "t_bool",
            "src": "contracts/GamePool.sol:26"
          },
          {
            "contract": "GamePool",
            "label": "orders",
            "type": "t_array(t_struct(Order)316_storage)dyn_storage",
            "src": "contracts/GamePool.sol:60"
          },
          {
            "contract": "GamePool",
            "label": "historys",
            "type": "t_mapping(t_uint256,t_struct(RoundData)305_storage)",
            "src": "contracts/GamePool.sol:62"
          },
          {
            "contract": "GamePool",
            "label": "userOrders",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/GamePool.sol:63"
          },
          {
            "contract": "GamePool",
            "label": "roundOrders",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/GamePool.sol:64"
          },
          {
            "contract": "GamePool",
            "label": "userRoundOrderMap",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "contracts/GamePool.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(Order)316_storage)dyn_storage": {
            "label": "struct GamePool.Order[]"
          },
          "t_struct(Order)316_storage": {
            "label": "struct GamePool.Order",
            "members": [
              {
                "label": "roundNumber",
                "type": "t_uint256"
              },
              {
                "label": "user",
                "type": "t_address"
              },
              {
                "label": "ticketAmount",
                "type": "t_uint256"
              },
              {
                "label": "winAmount",
                "type": "t_uint256"
              },
              {
                "label": "claimed",
                "type": "t_bool"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(RoundData)305_storage)": {
            "label": "mapping(uint256 => struct GamePool.RoundData)"
          },
          "t_struct(RoundData)305_storage": {
            "label": "struct GamePool.RoundData",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "ticketTotal",
                "type": "t_uint256"
              },
              {
                "label": "winTotal",
                "type": "t_uint256"
              },
              {
                "label": "rewardTotal",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
